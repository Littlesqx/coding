C:37:"PHPUnit\Runner\DefaultTestResultCache":3057:{a:2:{s:7:"defects";a:16:{s:70:"Littlesqx\DataStructure\Test\CollectionTest::testCollectionTraversable";i:5;s:60:"Littlesqx\DataStructure\Test\CollectionTest::testTraversable";i:3;s:61:"Littlesqx\DataStructure\Test\CollectionTest::testOffsetExists";i:5;s:59:"Littlesqx\DataStructure\Test\CollectionTest::testPopAndPush";i:3;s:45:"Littlesqx\DataStructure\Test\SetTest::testHas";i:3;s:45:"Littlesqx\DataStructure\Test\MapTest::testGet";i:5;s:45:"Littlesqx\DataStructure\Test\MapTest::testHas";i:5;s:47:"Littlesqx\DataStructure\Test\MapTest::testClear";i:5;s:46:"Littlesqx\DataStructure\Test\MapTest::testSize";i:5;s:48:"Littlesqx\DataStructure\Test\MapTest::testDelete";i:5;s:46:"Littlesqx\DataStructure\Test\MapTest::testKeys";i:3;s:48:"Littlesqx\DataStructure\Test\MapTest::testValues";i:5;s:49:"Littlesqx\DataStructure\Test\MapTest::testEntries";i:5;s:45:"Littlesqx\DataStructure\Test\MapTest::testSet";i:3;s:67:"Littlesqx\DataStructure\Test\BinaryTreeTest::testPostOrderTraversal";i:3;s:65:"Littlesqx\DataStructure\Test\BinaryTreeTest::testInOrderTraversal";i:5;}s:5:"times";a:30:{s:70:"Littlesqx\DataStructure\Test\CollectionTest::testCollectionTraversable";d:0.001;s:60:"Littlesqx\DataStructure\Test\CollectionTest::testTraversable";d:0;s:61:"Littlesqx\DataStructure\Test\CollectionTest::testOffsetExists";d:0;s:52:"Littlesqx\DataStructure\Test\CollectionTest::testGet";d:0;s:60:"Littlesqx\DataStructure\Test\CollectionTest::testSetAndUnset";d:0;s:59:"Littlesqx\DataStructure\Test\CollectionTest::testPopAndPush";d:0;s:58:"Littlesqx\DataStructure\Test\CollectionTest::testCountable";d:0;s:56:"Littlesqx\DataStructure\Test\CollectionTest::testIsEmpty";d:0;s:56:"Littlesqx\DataStructure\Test\CollectionTest::testToArray";d:0;s:45:"Littlesqx\DataStructure\Test\SetTest::testAdd";d:0;s:48:"Littlesqx\DataStructure\Test\SetTest::testDelete";d:0;s:45:"Littlesqx\DataStructure\Test\SetTest::testHas";d:0;s:47:"Littlesqx\DataStructure\Test\SetTest::testClear";d:0;s:46:"Littlesqx\DataStructure\Test\SetTest::testSize";d:0;s:51:"Littlesqx\DataStructure\Test\SetTest::testTraversal";d:0;s:45:"Littlesqx\DataStructure\Test\MapTest::testSet";d:0;s:45:"Littlesqx\DataStructure\Test\MapTest::testGet";d:0;s:45:"Littlesqx\DataStructure\Test\MapTest::testHas";d:0;s:47:"Littlesqx\DataStructure\Test\MapTest::testClear";d:0;s:46:"Littlesqx\DataStructure\Test\MapTest::testSize";d:0;s:48:"Littlesqx\DataStructure\Test\MapTest::testDelete";d:0;s:46:"Littlesqx\DataStructure\Test\MapTest::testKeys";d:0;s:48:"Littlesqx\DataStructure\Test\MapTest::testValues";d:0;s:49:"Littlesqx\DataStructure\Test\MapTest::testEntries";d:0;s:66:"Littlesqx\DataStructure\Test\BinaryTreeTest::testPreOrderTraversal";d:0.001;s:67:"Littlesqx\DataStructure\Test\BinaryTreeTest::testPostOrderTraversal";d:0;s:65:"Littlesqx\DataStructure\Test\BinaryTreeTest::testInOrderTraversal";d:0;s:65:"Littlesqx\DataStructure\Test\BinaryTreeTest::testTraversalInLayer";d:0;s:55:"Littlesqx\DataStructure\Test\BinaryTreeTest::testLeaves";d:0;s:54:"Littlesqx\DataStructure\Test\BinaryTreeTest::testDepth";d:0;}}}